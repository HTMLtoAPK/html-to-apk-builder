# .github/workflows/build-apk.yml

name: Build Android APK

on:
  repository_dispatch:
    types: [build-apk]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install Cordova CLI globally
        run: npm install -g cordova

      - name: Create Cordova Project
        run: >
          cordova create temp_build
          "${{ github.event.client_payload.packageId }}"
          "${{ github.event.client_payload.appName }}"

      - name: Inject User HTML and clean up default files
        env:
          HTML_CONTENT: ${{ github.event.client_payload.htmlCode }}
        run: |
          echo "$HTML_CONTENT" > temp_build/www/index.html
          rm -f temp_build/www/js/index.js
          rm -f temp_build/www/css/index.css

      - name: Add Android Platform
        run: cordova platform add android@11
        working-directory: ./temp_build

      - name: Install Android Build Tools
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;32.0.0"

      - name: Build Android APK
        run: cordova build android --release
        working-directory: ./temp_build

      - name: Find and Verify APK Path
        id: find_apk
        run: |
          # Search the entire android platform directory for the APK. This is the most reliable method.
          APK_PATH=$(find temp_build/platforms/android/ -type f -name "*.apk" | head -n 1)
          # CRITICAL: Check if the APK_PATH variable is empty. If so, the find command failed.
          if [[ -z "$APK_PATH" ]]; then
            echo "::error::Build succeeded, but no APK file was found!"
            echo "Listing contents of likely output directory for debugging..."
            ls -R temp_build/platforms/android/app/build/outputs/
            exit 1
          fi
          # If we get here, the APK was found successfully.
          echo "Successfully found APK at: $APK_PATH"
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: built-apk
          path: ${{ steps.find_apk.outputs.apk_path }}
          if-no-files-found: error
